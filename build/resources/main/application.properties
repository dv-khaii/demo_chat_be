#
# APPLICATION PROPERTIES
#
spring.application.name=chat
application.title=${APP_TILTE}
application.version=${APP_VERSION}
spring.banner.location=${APP_BANNER}
spring.config.import=file:.env[.properties]
show.environment.properties=${APP_SHOW_ENV}
server.address=${APP_HOST_URL}
server.port=${APP_HOST_PORT}
# get from app arguments
jasypt.encryptor.password=xeex_chat_be_362004
#
# MySQL DataSource for test/dev
#
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=${DB_DRIVER}
spring.jpa.properties.hibernate.dialect=${DB_DIALECT}
#
# Auto migration: create, create-drop, validate, update)
# and some other JPA options
#
spring.jpa.hibernate.ddl-auto = ${JPA_AUTO_UPDATE_DLL}
spring.main.allow-circular-references=true
spring.jpa.show-sql=${JPA_SHOW_SQL}
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL}
spring.jpa.properties.hibernate.use_sql_comments=${JPA_USE_SQL_COMMENTS}
logging.level.org.hibernate.type.descriptor.sql=${JPA_LOGGING_LEVEL}
#
#Cors, Token & security
#
jwt.secret=${JWT_SECRET}
#Token expiration time in milliseconds
#default 1hour (3600)
jwt.expiration.access=${JWT_EXPIRATION_TIME_ACCESS}
#Token expiration time in
#Default 1 day (86400)
jwt.expiration.refesh=${JWT_EXPIRATION_TIME_REFRESH}
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
web.config.cors.allowedOrigins=${CORS_ALLOWED_ORIGINS}
#
#tomcat/socket.io configuration
#
#Maximum number of HTTP requests that can be pipelined before the connection is closed. 
#When set to 0 or 1, keep-alive and pipelining are disabled. 
#When set to -1, an unlimited number of pipelined or keep-alive requests are allowed.
#Default is 8192
server.tomcat.max-connections=${TOMCAT_MAX_CONNECTIONS}
#
#Maximum number of threads in Tomcat's HTTP connector.
#When set to -1, the connector uses an unlimited number of threads.
#When set to 0, the connector uses the default number of threads.
#When set to a positive number, the connector uses that number of threads.
#Default is 100
server.tomcat.max-keep-alive-requests=${TOMCAT_MAX_THREADS}
#
#Maximum queue length for incoming connection requests when all possible request processing threads are in use.
#Any requests received when the queue is full will be refused.
#Default is 10000
server.tomcat.accept-count=${TOMCAT_ACCEPT_COUNT}
#
#Maximum size in bytes of the HTTP post or put request body.
#Default is 2MB
server.tomcat.max-http-form-post-size=${TOMCAT_MAX_HTTP_FORM_POST_SIZE}
#
#Socket.io configuration
#
#Maximum size in Kb of the HTTP post or put request body.
#Default is 64KB
websocket.message-size-limit=${WEBSOCKET_MESSAGE_SIZE_LIMIT}
#
#Maximum size in Kb of the HTTP post or put request body.
#The default value is 512K
websocket.send-buffer-size-limit=${WEBSOCKET_SEND_BUFFER_SIZE_LIMIT}
#
#Configure a time limit (in minute) for the maximum amount of a time allowed
#when sending messages to a WebSocket session 
#or writing to an HTTP response when SockJS fallback option are in use.
#Default is 10 seconds
websocket.send-time-limit=${WEBSOCKET_SEND_TIME_LIMIT}

#
#Maximum size in MB of the HTTP post or put request body.
#Spring system allow upload big size file no limit from client
spring.servlet.multipart.max-file-size=-1
spring.servlet.multipart.max-request-size=-1
#
#Maximum size in MB of the HTTP post or put request body.
#The default value is 10(MB)
file.limit-file-size-upload=${FILE_LIMIT_FILE_SIZE_UPLOAD}
#
#Specifies the maximum number of files that can be uploaded.
#The value is retrieved from the environment variable FILE_LIMIT_FILE_COUNT_UPLOAD.
#This property is used in the application.properties file.
file.limit-file-count-upload=${FILE_LIMIT_FILE_COUNT_UPLOAD}
#
# This property file is used to configure the application.
# The 'file.host' property specifies the host of a file.
# The value of the 'file.host' property is retrieved from the environment variable 'FILE_HOST'.
file.host=${FILE_HOST}
#
#Configure path save file upload from client
file.path-upload=${FILE_PATH_UPLOAD}
#
#Maximum size in MB of the HTTP post or put request body.
#The default value is 2MB
file.limit-avatar-size-upload=${FILE_LIMIT_AVATAR_SIZE_UPLOAD}

#
# SSL Certificate
#
server.ssl.enabled=${SSL_ENABLED}
server.ssl.key-store=${SSL_KEY_STORE}
server.ssl.key-store-type=${SSL_KEY_STORE_TYPE}
server.ssl.key-store-password=${SSL_KEY_STORE_PASSWORD}
server.ssl.key-alias=${SSL_KEY_ALIAS}